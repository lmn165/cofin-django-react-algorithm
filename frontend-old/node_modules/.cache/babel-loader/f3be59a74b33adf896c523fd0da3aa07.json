{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\ho\\\\new\\\\frontend\\\\src\\\\common\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n\n  const todos = useSelector(state => state.todoReducer.todos);\n  const dispatch = useDispatch();\n\n  const toggleTodo = id => dispatch(toggleTodoAction(id));\n\n  const deleteTodo = id => dispatch(deleteTodoAction(id));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [todos.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC9C0\\uAE08\\uC740 \\uB4F1\\uB85D\\uB41C \\uD654\\uBA74\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }, this), todos.length !== 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [todos.length, \" \\uAC1C\\uC758 \\uD560\\uC77C \\uBAA9\\uB85D\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }, this), todos.length !== 0 && todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.complete,\n        onChange: toggleTodo.bind(null, todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), todo.complete ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: 'line-through'\n        },\n        children: todo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: todo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTodo.bind(null, todo.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this))]\n  }, void 0, true);\n}\n\n_s(TodoList, \"FiMoGXqJtx1oUFQRG74TZ9QIm7U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/ASUS/ho/new/frontend/src/common/components/TodoList.js"],"names":["React","useSelector","useDispatch","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Checkbox","IconButton","CommentIcon","TodoList","todos","state","todoReducer","dispatch","toggleTodo","id","toggleTodoAction","deleteTodo","deleteTodoAction","length","map","todo","complete","bind","textDecoration","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAMC,KAAK,GAAGX,WAAW,CAAEY,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,KAA7B,CAAzB;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,UAAU,GAAGC,EAAE,IAAIF,QAAQ,CAACG,gBAAgB,CAACD,EAAD,CAAjB,CAAjC;;AACA,QAAME,UAAU,GAAGF,EAAE,IAAIF,QAAQ,CAACK,gBAAgB,CAACH,EAAD,CAAjB,CAAjC;;AACA,sBACA;AAAA,eACKL,KAAK,CAACS,MAAN,KAAiB,CAAjB,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD5B,EAEKT,KAAK,CAACS,MAAN,KAAiB,CAAjB,iBAAuB;AAAA,iBAAKT,KAAK,CAACS,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAF5B,EAIKT,KAAK,CAACS,MAAN,KAAiB,CAAjB,IAAsBT,KAAK,CAACU,GAAN,CACnBC,IAAI,iBAAK;AAAA,8BACL;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEA,IAAI,CAACC,QAArC;AAA+C,QAAA,QAAQ,EAAER,UAAU,CAACS,IAAX,CAAgB,IAAhB,EAAsBF,IAAI,CAACN,EAA3B;AAAzD;AAAA;AAAA;AAAA;AAAA,cADK,EAEJM,IAAI,CAACC,QAAL,gBACD;AAAM,QAAA,KAAK,EAAE;AAACE,UAAAA,cAAc,EAAE;AAAjB,SAAb;AAAA,kBAAgDH,IAAI,CAACI;AAArD;AAAA;AAAA;AAAA;AAAA,cADC,gBAEC;AAAA,kBAAOJ,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJG,eAKL;AAAQ,QAAA,OAAO,EAAER,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsBF,IAAI,CAACN,EAA3B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALK;AAAA,OAAUM,IAAI,CAACN,EAAf;AAAA;AAAA;AAAA;AAAA,YADU,CAJ3B;AAAA,kBADA;AAeH;;GApBuBN,Q;UACNV,W,EACGC,W;;;KAFGS,Q","sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\n\r\nexport default function TodoList() {\r\n    const todos = useSelector( state => state.todoReducer.todos )\r\n    const dispatch = useDispatch()\r\n    const toggleTodo = id => dispatch(toggleTodoAction(id))\r\n    const deleteTodo = id => dispatch(deleteTodoAction(id))\r\n    return (\r\n    <>\r\n        {todos.length === 0 && (<h1>지금은 등록된 화면이 없습니다.</h1>) }\r\n        {todos.length !== 0 && (<h1>{todos.length} 개의 할일 목록이 있습니다.</h1>)}\r\n\r\n        {todos.length !== 0 && todos.map(\r\n            todo => (<div key={todo.id}>\r\n                <input type='checkbox' checked={todo.complete} onChange={toggleTodo.bind(null, todo.id)}/>\r\n                {todo.complete ?\r\n                <span style={{textDecoration: 'line-through'}}>{todo.name}</span>\r\n                : <span>{todo.name}</span>}\r\n                <button onClick={deleteTodo.bind(null, todo.id)}>X</button>\r\n            </div>)\r\n        )}\r\n    </>)\r\n}"]},"metadata":{},"sourceType":"module"}